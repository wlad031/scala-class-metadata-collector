@startuml
left to right direction
hide circle
hide empty members

interface Schema<M> {
    M meta()
}

show Schema circle

package "Complex" <<Rectangle>> {

    class ProductSchema<M> {
        ListMap<Symbol, Schema<M>> childs
    }

    class CoproductSchema<M> {
        Map<Symbol, Schema<M>> childs
    }

    class OptionSchema<M> {
        Schema<M> schema
    }

    class ListSchema<M> {
        Schema<M> schema
    }

    Schema <|-- OptionSchema
    Schema <|-- ListSchema
    Schema <|-- ProductSchema
    Schema <|-- CoproductSchema
}

package "Primitives" <<Rectangle>> {

    interface PrimitiveSchema {
    }

    Schema <|-up- PrimitiveSchema

    PrimitiveSchema <|-up- BooleanSchema
    PrimitiveSchema <|-up- CharSchema
    PrimitiveSchema <|-up- StringSchema
    PrimitiveSchema <|-up- ShortSchema
    PrimitiveSchema <|-- IntSchema
    PrimitiveSchema <|-- LongSchema
    PrimitiveSchema <|-- FloatSchema
    PrimitiveSchema <|-- DoubleSchema

    show PrimitiveSchema circle
}

@enduml
