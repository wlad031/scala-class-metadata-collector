@startuml
left to right direction
hide circle
hide empty members

interface Shape<M> {
    M meta()
}

show Shape circle

package "Complex" <<Rectangle>> {

    class ProductShape<M> {
        ListMap<Symbol, Shape<M>> childs
    }

    class CoproductShape<M> {
        Map<Symbol, Shape<M>> childs
    }

    class OptionShape<M> {
        Shape<M> shape
    }

    class ListShape<M> {
        Shape<M> shape
    }

    Shape <|-- OptionShape
    Shape <|-- ListShape
    Shape <|-- ProductShape
    Shape <|-- CoproductShape
}

package "Primitives" <<Rectangle>> {

    interface PrimitiveShape {
    }

    Shape <|-up- PrimitiveShape

    PrimitiveShape <|-up- BooleanShape
    PrimitiveShape <|-up- CharShape
    PrimitiveShape <|-up- StringShape
    PrimitiveShape <|-up- ShortShape
    PrimitiveShape <|-- IntShape
    PrimitiveShape <|-- LongShape
    PrimitiveShape <|-- FloatShape
    PrimitiveShape <|-- DoubleShape

    show PrimitiveShape circle
}

@enduml
